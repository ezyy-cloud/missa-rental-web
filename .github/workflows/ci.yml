name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
  STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Run build
      run: npm run build

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ env.CODECOV_TOKEN }}

  e2e:
    runs-on: ubuntu-latest
    needs: test

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup Supabase CLI
      uses: supabase/setup-cli@v1
      with:
        version: latest

    - name: Start Supabase
      run: supabase start

    - name: Run migrations
      run: supabase db reset

    - name: Run E2E tests
      run: npm run test:e2e
      env:
        SUPABASE_URL: ${{ env.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
        STRIPE_PUBLIC_KEY: ${{ env.STRIPE_PUBLIC_KEY }}
        STRIPE_SECRET_KEY: ${{ env.STRIPE_SECRET_KEY }}

  deploy:
    runs-on: ubuntu-latest
    needs: [test, e2e]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ env.SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
        VITE_STRIPE_PUBLIC_KEY: ${{ env.STRIPE_PUBLIC_KEY }}

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ env.VERCEL_TOKEN }}
        vercel-org-id: ${{ env.VERCEL_ORG_ID }}
        vercel-project-id: ${{ env.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
